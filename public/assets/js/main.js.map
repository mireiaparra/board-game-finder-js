{"version":3,"sources":["0_globalVariables.js","1_search.js","2_fav.js","3_localStorage.js","4_resetBtn.js","5_rate.js","main.js"],"names":[],"mappingsjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["\"use strict\";\nconst allList = document.querySelector(\".js-allBoardGamesList\");\nconst favList = document.querySelector(\".js-favBoardGamesList\");\nconst favSection = document.querySelector(\".js-favSection\");\nconst searchBtn = document.querySelector(\".js-searchBtn\");\nconst searchInput = document.querySelector(\".js-searchInput\");\nconst container = document.querySelector(\".js-main\");\nconst logBtn = document.querySelector(\".js-LogBtn\");\n\nlet BoardGames = [];\nlet favBoardGames = [];\nlet favsLocal = JSON.parse(localStorage.getItem(\"favChars\"));\n","\"use strict\";\nfunction handleClickSearch(ev) {\n  ev.preventDefault();\n\n  //Filtrar objetos por nombre y estado según lo introducido en el input de búsqueda. Concatenar los resultados en un nuevo array\n  const searchBoardGamesName = BoardGames.filter((eachBoardGame) =>\n    eachBoardGame.name.toLowerCase().includes(searchInput.value.toLowerCase())\n  );\n  const searchBoardGamesStatus = BoardGames.filter((eachBoardGame) =>\n    eachBoardGame.type.toLowerCase().includes(searchInput.value.toLowerCase())\n  );\n\n  let filteredBoardGames = searchBoardGamesName.concat(searchBoardGamesStatus);\n\n  //Pintar los resultados\n  allList.innerHTML = \"\";\n  paintBoardGames(filteredBoardGames, allList, \"allBoardGames__list--article\");\n\n  //Estilizar los resultados según si son favoritos o no\n  const filteredChildrenLi = allList.children;\n  setEventClick(filteredChildrenLi);\n  for (let i = 0; i < filteredChildrenLi.length; i++) {\n    filteredChildrenLi[i].addEventListener(\"click\", handleClickFav);\n\n    //Article de cada elemento de la lista de filtrados\n    const eachFiltered = filteredChildrenLi[i].firstChild;\n\n    if (favBoardGames !== null && favBoardGames !== []) {\n    //Esto da el index del objeto de favoritos que tenga un id igual al del resultado de la búsqueda\n    const findSearchIndex = favBoardGames.findIndex((eachChar) => eachChar.char_id == parseInt(eachFiltered.id));\n    \n    //Comprobar si el objeto de la búsqueda estaba en el array de favoritos o no\n    if (findSearchIndex !== -1) {\n        eachFiltered.classList.add(\"favsBoardGames__list--article\");\n      } else {\n        eachFiltered.classList.add(\"allBoardGames__list--article\");\n      }\n    }\n  }\n}\n\nsearchBtn.addEventListener(\"click\", handleClickSearch);\n","\"use strict\";\nfunction paintFav(ev) {\n  //Esto da el article padre del elemento sobre el que se haya hecho click\n  let favElement = ev.currentTarget.firstChild;\n  favElement.classList.add(\"favsBoardGames__list--article\");\n\n  //Encontrar el objeto que tenga el mismo id que el article sobre el que se ha hecho click\n  const findFav = BoardGames.find((eachChar) => eachChar.id === (favElement.id));\n\n  //Encontrar la posición del objeto en el que he hecho click en el array de favoritos\n  const isFavIndex = favBoardGames.findIndex((eachFav) => eachFav.id === (favElement.id));\n\n  //Comprobar si el objeto NO estaba en el array y añadirlo o quitarlo si SÍ estaba\n  if (isFavIndex === -1) {\n    favBoardGames.push(findFav);\n  } else {\n    favBoardGames.splice(isFavIndex, 1);\n    favElement.classList.remove(\"favsBoardGames__list--article\");\n  }\n  updateFavList();\n}\n\nfunction updateFavList() {\n  favList.innerHTML = \"\";\n  //Ocultar la sección de favoritos si está vacía y vaciar LS\n  if (favBoardGames.length === 0 || favBoardGames === null) {\n    favSection.classList.add(\"hidden\");\n    favSection.classList.remove(\"favsBoardGames\");\n    container.classList.remove(\"main\");\n    removeLocalSt();\n  \n  //Mostrar y estilizar la sección de favoritos si NO está vacía y guardar en LS\n  } else {\n    favSection.classList.remove(\"hidden\");\n    favSection.classList.add(\"favsBoardGames\");\n    paintBoardGames(favBoardGames, favList, \"favsBoardGames__list--articleBtn\");\n    askRate();\n    styleFav();\n    setLocalSt();\n  }\n}\n\nfunction styleFav() {\n  container.classList.add(\"main\");\n  const favArticles = document.querySelectorAll(\".favsBoardGames__list--articleBtn\");\n  //Localizar cada article de la lista de favoritos para añadirle una X\n  for (const favArticle of favArticles) {\n    const removeFavBtn = document.createElement(\"p\");\n    removeFavBtn.classList.add(\"removeFav\");\n    removeFavBtn.addEventListener(\"click\", handleClickRemove);\n    const removeFavText = document.createTextNode(\"X\");\n    removeFavBtn.appendChild(removeFavText);\n    favArticle.appendChild(removeFavBtn);\n  }\n}\n\nfunction handleClickRemove(ev) {\n  ev.preventDefault();\n  //Encontrar el article padre de la X en la que se hace click, encontrar el objeto con el mismo id de la lista de favoritos y eliminarlo\n  const isFavIndex = favBoardGames.findIndex((eachFav) => eachFav.id === (ev.target.parentElement.id));\n  favBoardGames.splice(isFavIndex, 1);\n\n  // //Encontrar el article padre de la X en la que se hace click, encontrar el article con el mismo id en la lista general y cambiarle el estilo\n  const allLi = allList.children;\n  const allLiArr = Array.prototype.slice.call(allLi);\n  const oldFavBoardGameLi = allLiArr.find((eachLi) => eachLi.firstChild.id === (ev.target.parentElement.id));\n  oldFavBoardGameLi.firstChild.classList.remove(\"favsBoardGames__list--article\");\n  updateFavList();\n}\n\nfunction handleClickFav(ev) {\n  ev.preventDefault();\n  paintFav(ev);\n}\n","\"use strict\";\nfunction setLocalSt() {\n  localStorage.setItem(\"favChars\", JSON.stringify(favBoardGames));\n}\nfunction removeLocalSt() {\n  localStorage.removeItem(\"favChars\");\n}\n\nfunction paintLocalSt() {\n  //Mostrar elementos favoritos desde el LS si existe\n  if (favsLocal !== null && favsLocal.length > 0) {\n    favSection.classList.remove(\"hidden\");\n    favSection.classList.add(\"favsBoardGames\");\n    favBoardGames = favsLocal;\n    paintBoardGames(favsLocal, favList, \"favsBoardGames__list--articleBtn\");\n    styleFav();\n    askRate();\n\n    const allBoardGamesLi = allList.children;\n\n    //Recorrer cada article de la lista general\n    for (let i = 0; i < allBoardGamesLi.length; i++) {\n      const eachArticle = allBoardGamesLi[i].firstChild;\n    //Encontrar la posición de los objetos de favoritos que tengan un id igual a los articles de la lista general\n      const findArticleIndex = favBoardGames.findIndex((eachChar) => eachChar.id === (eachArticle.id));\n\n      //Comprobar si el objeto está en el array de favoritos\n      if (findArticleIndex !== -1) {\n        eachArticle.classList.add(\"favsBoardGames__list--article\");\n      } \n    }\n  }\n}\n","\"use strict\";\nfunction createReset() {\n  const resetBtn = document.createElement(\"button\");\n  const resetText = document.createTextNode(\"Delete All\");\n  resetBtn.appendChild(resetText);\n  resetBtn.classList.add(\"favsBoardGames__reset\");\n  favSection.appendChild(resetBtn);\n  resetBtn.addEventListener(\"click\", handleClickReset);\n}\n\nfunction handleClickReset() {\n  favBoardGames = [];\n  favList.innerHTML = \"\";\n  favSection.classList.add(\"hidden\");\n  favSection.classList.remove(\"favsBoardGames\");\n  container.classList.remove(\"main\");\n  removeLocalSt();\n\n  //Eliminar la clase de favoritos de cada article de la lista general\n  for (const eachLi of allList.children) {\n    eachLi.firstChild.classList.remove(\"favsBoardGames__list--article\");\n  }\n}\n","function askRate() {\n    const favBoardGamesNL = document.querySelectorAll(\".favsBoardGames__list--articleBtn\");\n    const favBoardGames = Array.from(favBoardGamesNL);\n    \n    for (const eachArticle of favBoardGames) {\n   \n        const eachFiltered = favBoardGames.find((eachBoardGame) => eachArticle.id === eachBoardGame.id);\n        if(eachFiltered.rate !== undefined && eachFiltered.rate !== null) {\n            const rateTextEl = document.createElement(\"p\");\n            const rateText = document.createTextNode(eachFiltered.rate);\n            rateTextEl.appendChild(rateText);\n            eachArticle.appendChild(rateTextEl);\n        } else {\n            const rateInputEl = document.createElement(\"input\");\n            rateInputEl.type = \"text\";\n            rateInputEl.classList.add(\"js-rateInput\");\n            const rateBtnEl = document.createElement(\"button\");\n            const rateBtnText = document.createTextNode(\"Rate\");\n            rateBtnEl.appendChild(rateBtnText);\n            rateBtnEl.classList.add(\"js-rateBtn\");\n            eachArticle.appendChild(rateInputEl);\n            eachArticle.appendChild(rateBtnEl);\n      \n\n        rateBtnEl.addEventListener('click',() =>{\n            const rateValue = rateInputEl.value;\n            rateInputEl.classList.add(\"hidden\");\n            rateBtnEl.classList.add(\"hidden\");\n            const rateTextEl = document.createElement(\"p\");\n            const rateText = document.createTextNode(rateValue);\n            rateTextEl.appendChild(rateText);\n            eachArticle.appendChild(rateTextEl);\n\n            eachFiltered.rate = rateValue;\n            setLocalSt();\n        }); \n    }\n}\n}\n","\"use strict\";\n\n//Función base para pintar los elementos de las listas con DOM avanzado\nfunction paintBoardGames(BoardGamesData, list, className) {\n  for (let i = 0; i < BoardGamesData.length; i++) {\n    const liElement = document.createElement(\"li\");\n    const articleElement = document.createElement(\"article\");\n    articleElement.classList.add(className);\n    articleElement.setAttribute(\"id\", `${BoardGamesData[i].id}`);\n\n    const imgElement = document.createElement(\"img\");\n    imgElement.src = `${BoardGamesData[i].image_url}`;\n    imgElement.alt = `Photo of ${BoardGamesData[i].name}`;\n    imgElement.style.height = \"150px\";\n    imgElement.style.width = \"120px\";\n    articleElement.appendChild(imgElement);\n\n    const titleElement = document.createElement(\"h2\");\n    articleElement.appendChild(titleElement);\n    const textElement = document.createElement(\"p\");\n    articleElement.appendChild(textElement);\n\n    liElement.appendChild(articleElement);\n    list.appendChild(liElement);\n\n    const nameText = document.createTextNode(`${BoardGamesData[i].name}`);\n    titleElement.appendChild(nameText);\n\n    const statusText = document.createTextNode(`${BoardGamesData[i].type}`);\n    textElement.appendChild(statusText);\n\n    if (BoardGamesData[i].player_counts){\n    const chAppArr = BoardGamesData[i].player_counts;\n    const chApp = chAppArr.join(\",\");\n    const ulApp = document.createElement(\"ul\");\n    const pApp = document.createElement(\"p\");\n\n    const pAppText = document.createTextNode(chApp);\n    pApp.appendChild(pAppText);\n    ulApp.appendChild(pApp);\n\n    articleElement.appendChild(ulApp);\n    }\n  }\n}\n\n//Obtener los personajes de la API\nfunction getBoardGames() {\n  fetch(\"https://api.boardgameatlas.com/api/search?order_by=popularity&client_id=fedCzdzOWG\")\n    .then((response) => response.json())\n    .then((data) => {\n      BoardGames = data.games;\n      paintBoardGames(BoardGames, allList, \"allBoardGames__list--article\");\n      const allListChildren = allList.children;\n      setEventClick(allListChildren)\n      paintLocalSt();\n    });\n}\n\nfunction setEventClick(list){\n  for (let i = 0; i < list.length; i++) {\n    list[i].addEventListener(\"click\", handleClickFav);\n  }\n}\n\n// Al cargar la página\ngetBoardGames();\ncreateReset();"]}